import sounddevice as sd
import numpy as np
import scipy.io.wavfile as wav
import speech_recognition as sr
import random
from googletrans import Translator


duration = 5  # —Å–µ–∫—É–Ω–¥—ã –∑–∞–ø–∏—Å–∏
sample_rate = 44100

easy_level = ["–∫–æ—Ç", "—Å–æ–±–∞–∫–∞", "—è–±–ª–æ–∫–æ", "–º–æ–ª–æ–∫–æ", "—Å–æ–ª–Ω—Ü–µ",'—Å—Ç—É–ª','–∫–æ—Ä–æ–≤–∞','–∫–æ—Ä–æ–±–∫–∞','—Å—Ç–æ–ª']

medium_level = ["–±–∞–Ω–∞–Ω", "–®–∫–æ–ª–∞", "–¥—Ä—É–≥", "–æ–∫–Ω–æ", "–∂–µ–ª—Ç—ã–π",'—Ç–µ–ª–µ—Ñ–æ–Ω','–∫–æ–º–ø—å—é—Ç–µ—Ä','—Å–∞–º–æ–ª–µ—Ç']

hard_level = ["—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è", "–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç", "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ", "–≤–æ–æ–±—Ä–∞–∂–µ–Ω–∏–µ",'–ø–æ–¥–≤–æ–¥–Ω–∞—è –ª–æ–¥–∫–∞','–º–µ–¥–∏—Ü–∏–Ω–∞','–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞','–ø—Å–∏—Ö–æ–ª–æ–≥–∏—è','–ü–æ–¥–∑–µ–º–µ–ª—å–µ']

level_selection = input('–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –∏–≥—Ä–∞ - –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫. \n–í —á—ë–º —Å—É—Ç—å —ç—Ç–æ–π –∏–≥—Ä—ã? \n–≠—Ç–∞ –∏–≥—Ä–∞ –ø–æ–º–æ–≥–∞–µ—Ç –≤—ã—É—á–∏—Ç—å –ê–Ω–≥–ª–∏–π—Å–∫–∏–π. \n–ö–∞–∫ –≤ –Ω–µ—ë –∏–≥—Ä–∞—Ç—å? \n1:–°–Ω–∞—á–∞–ª–∞ –≤–∞–º –Ω–∞–¥–æ –≤—ã–±—Ä–∞—Ç—å —Å–ª–æ–∂–Ω–æ—Å—Ç—å , –ª–µ–≥–∫–∏–π , —Å—Ä–µ–¥–Ω–∏–π –∏–ª–∏ —Å–ª–æ–∂–Ω—ã–π. \n2:–ü–æ—Ç–æ–º –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞–ø–∏—à–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —Å–ª–æ–≤–æ –∏—Å—Ö–æ–¥—è –∏–∑ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—É—é –≤—ã –≤—ã–±—Ä–∞–ª–∏. \n3.–í—ã –¥–æ–ª–∂–Ω—ã –ø–µ—Ä–µ–≤–∏—Å—Ç–∏ —ç—Ç–æ —Å–ª–æ–≤–æ –Ω–∞ –ê–Ω–≥–ª–∏–π—Å–∫–∏–π –≤ —Ç–µ—á–µ–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥. \n4:–ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–æ–≤–µ—Ä–∏—Ç –≤–∞—à –æ—Ç–≤–µ—Ç –∏ —Å–∫–∞–∂–µ—Ç –≤–∞–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–ª–∏ –Ω–µ—Ç. \n–¢–µ–ø–µ—Ä—å –≤–∞–º –Ω–∞–¥–æ –≤—ã–±—Ä–∞—Ç—å —Å–ª–æ–∂–Ω–æ—Ç—å. –ï—Å–ª–∏ –ª–µ–≥–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –Ω–∞–ø–∏—à–∏—Ç–µ "–ª–µ–≥–∫–∏–π" , –µ—Å–ª–∏ —Å—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å –Ω–∞–ø–∏—à–∏—Ç–µ "—Å—Ä–µ–¥–Ω–∏–π" –∏ –µ—Å–ª–∏ —Å–ª–æ–∂–Ω—ã–π –Ω–∞–ø–∏—à–∏—Ç–µ "—Å–ª–æ–∂–Ω—ã–π":')

while True:
    
    if level_selection == '–ª–µ–≥–∫–∏–π':
        easy_from_ru_to_en_word = random.choice(easy_level)


        print("üéô–ü–µ—Ä–µ–≤–µ–¥–∏ —Å–ª–æ–≤–æ " , easy_from_ru_to_en_word ,", –Ω–∞ –ê–Ω–≥–ª–∏–π—Å–∫–∏–π –≤—Ä–µ–º—è –ø–æ—à–ª–æ...")
        recording = sd.rec(
        int(duration * sample_rate), # –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∏ –≤ —Å—ç–º–ø–ª–∞—Ö
        samplerate=sample_rate,      # —á–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏
        channels=1,                  # 1 ‚Äî —ç—Ç–æ –º–æ–Ω–æ
        dtype="int16")               # —Ñ–æ—Ä–º–∞—Ç –∞—É–¥–∏–æ–¥–∞–Ω–Ω—ã—Ö
        sd.wait()  # –∂–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏

        wav.write("output.wav", sample_rate, recording)
        print("‚úÖ –ó–∞–ø–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —Ç–µ–ø–µ—Ä—å —Ä–∞—Å–ø–æ–∑–Ω–∞—ë–º...")

        recognizer = sr.Recognizer()
        with sr.AudioFile("output.wav") as source:
            audio = recognizer.record(source)

        try:
            text = recognizer.recognize_google(audio, language="en-EN")
            print("üìù–¢—ã —Å–∫–∞–∑–∞–ª:", text)

        except sr.UnknownValueError:             # - –µ—Å–ª–∏ Google –Ω–µ –ø–æ–Ω—è–ª —Ä–µ—á—å (—à—É–º, –º–æ–ª—á–∞–Ω–∏–µ)
            print("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å.")
        except sr.RequestError as e:             # - –µ—Å–ª–∏ –Ω–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –∏–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
            print(f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞: {e}")


        translator = Translator()
        translator = Translator()
        translated = translator.translate(text, dest='ru')
        if translated.text == easy_from_ru_to_en_word:
            print('–ü—Ä–∞–≤–∏–ª—å–Ω–æ!!! –£ –≤–∞—Å —Ö–æ—Ä–æ—à–æ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ')
            
        elif translated.text != easy_from_ru_to_en_word:
            print('–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ. –í —Å–ª–µ–¥—É—é—à–∏–π —Ä–∞–∑ —Ç–æ—á–Ω–æ –ø–æ–ª—É—á–∏—Ç—Å—è!')     
        learn_more1 = input('–ë—É–¥–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å , –∏–ª–∏ –Ω–µ—Ç?(–ï—Å–ª–∏ –¥–∞ —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ !–¥–∞! , –µ—Å–ª–∏ –Ω–µ—Ç —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ !–Ω–µ—Ç!)')
        if learn_more1 == '–¥–∞':
            level_selection = input('–í—ã–±–µ—Ä–µ—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç—å –µ—Å–ª–∏ –ª–µ–≥–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –Ω–∞–ø–∏—à–∏—Ç–µ "–ª–µ–≥–∫–∏–π" , –µ—Å–ª–∏ —Å—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å –Ω–∞–ø–∏—à–∏—Ç–µ "—Å—Ä–µ–¥–Ω–∏–π" –∏ –µ—Å–ª–∏ —Å–ª–æ–∂–Ω—ã–π –Ω–∞–ø–∏—à–∏—Ç–µ "—Å–ª–æ–∂–Ω—ã–π":')
            
        elif learn_more1 == '–Ω–µ—Ç':
            print('–ù–∞ —Å–µ–≥–æ–¥–Ω—è –≤—Å—ë!')
            break
        else:
            print('–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥!!!')
            break

    elif level_selection == '—Å—Ä–µ–¥–Ω–∏–π':
        medium_from_ru_to_en_word = random.choice(medium_level)


        print("üéô–ü–µ—Ä–µ–≤–µ–¥–∏ —Å–ª–æ–≤–æ " , medium_from_ru_to_en_word ,", –Ω–∞ –ê–Ω–≥–ª–∏–π—Å–∫–∏–π –≤—Ä–µ–º—è –ø–æ—à–ª–æ...")
        recording = sd.rec(
        int(duration * sample_rate), # –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∏ –≤ —Å—ç–º–ø–ª–∞—Ö
        samplerate=sample_rate,      # —á–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏
        channels=1,                  # 1 ‚Äî —ç—Ç–æ –º–æ–Ω–æ
        dtype="int16")               # —Ñ–æ—Ä–º–∞—Ç –∞—É–¥–∏–æ–¥–∞–Ω–Ω—ã—Ö
        sd.wait()  # –∂–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏

        wav.write("output.wav", sample_rate, recording)
        print("‚úÖ –ó–∞–ø–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —Ç–µ–ø–µ—Ä—å —Ä–∞—Å–ø–æ–∑–Ω–∞—ë–º...")

        recognizer = sr.Recognizer()
        with sr.AudioFile("output.wav") as source:
            audio = recognizer.record(source)

        try:
            text = recognizer.recognize_google(audio, language="en-EN")
            print("üìù–¢—ã —Å–∫–∞–∑–∞–ª:", text)

        except sr.UnknownValueError:             # - –µ—Å–ª–∏ Google –Ω–µ –ø–æ–Ω—è–ª —Ä–µ—á—å (—à—É–º, –º–æ–ª—á–∞–Ω–∏–µ)
            print("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å.")
        except sr.RequestError as e:             # - –µ—Å–ª–∏ –Ω–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –∏–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
            print(f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞: {e}")


        translator = Translator()
        translator = Translator()
        translated = translator.translate(text, dest='ru')
        if translated.text == medium_from_ru_to_en_word:
            print('–ü—Ä–∞–≤–∏–ª—å–Ω–æ!!! –£ –≤–∞—Å —Ö–æ—Ä–æ—à–æ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ')
            
        elif translated.text != medium_from_ru_to_en_word:
            print('–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ. –í —Å–ª–µ–¥—É—é—à–∏–π —Ä–∞–∑ —Ç–æ—á–Ω–æ –ø–æ–ª—É—á–∏—Ç—Å—è!')     
        learn_more2 = input('–ë—É–¥–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å , –∏–ª–∏ –Ω–µ—Ç?(–ï—Å–ª–∏ –¥–∞ —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ !–¥–∞! , –µ—Å–ª–∏ –Ω–µ—Ç —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ !–Ω–µ—Ç!)')
        if learn_more2 == '–¥–∞':
            level_selection = input('–í—ã–±–µ—Ä–µ—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç—å –µ—Å–ª–∏ –ª–µ–≥–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –Ω–∞–ø–∏—à–∏—Ç–µ "–ª–µ–≥–∫–∏–π" , –µ—Å–ª–∏ —Å—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å –Ω–∞–ø–∏—à–∏—Ç–µ "—Å—Ä–µ–¥–Ω–∏–π" –∏ –µ—Å–ª–∏ —Å–ª–æ–∂–Ω—ã–π –Ω–∞–ø–∏—à–∏—Ç–µ "—Å–ª–æ–∂–Ω—ã–π":')
        elif learn_more2 == '–Ω–µ—Ç':
            print('–ù–∞ —Å–µ–≥–æ–¥–Ω—è –≤—Å—ë!')
            break
        else:
            print('–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥!!!')
            break
    elif level_selection == '—Å–ª–æ–∂–Ω—ã–π':
        hard_from_ru_to_en_word = random.choice(hard_level)


        print("üéô–ü–µ—Ä–µ–≤–µ–¥–∏ —Å–ª–æ–≤–æ " , hard_from_ru_to_en_word ,", –Ω–∞ –ê–Ω–≥–ª–∏–π—Å–∫–∏–π –≤—Ä–µ–º—è –ø–æ—à–ª–æ...")
        recording = sd.rec(
        int(duration * sample_rate), # –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∏ –≤ —Å—ç–º–ø–ª–∞—Ö
        samplerate=sample_rate,      # —á–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏
        channels=1,                  # 1 ‚Äî —ç—Ç–æ –º–æ–Ω–æ
        dtype="int16")               # —Ñ–æ—Ä–º–∞—Ç –∞—É–¥–∏–æ–¥–∞–Ω–Ω—ã—Ö
        sd.wait()  # –∂–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏

        wav.write("output.wav", sample_rate, recording)
        print("‚úÖ –ó–∞–ø–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —Ç–µ–ø–µ—Ä—å —Ä–∞—Å–ø–æ–∑–Ω–∞—ë–º...")

        recognizer = sr.Recognizer()
        with sr.AudioFile("output.wav") as source:
            audio = recognizer.record(source)

        try:
            text = recognizer.recognize_google(audio, language="en-EN")
            print("üìù–¢—ã —Å–∫–∞–∑–∞–ª:", text)

        except sr.UnknownValueError:             # - –µ—Å–ª–∏ Google –Ω–µ –ø–æ–Ω—è–ª —Ä–µ—á—å (—à—É–º, –º–æ–ª—á–∞–Ω–∏–µ)
            print("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å.")
        except sr.RequestError as e:             # - –µ—Å–ª–∏ –Ω–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –∏–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
            print(f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞: {e}")


        translator = Translator()
        translator = Translator()
        translated = translator.translate(text, dest='ru')
        if translated.text == hard_from_ru_to_en_word:
            print('–ü—Ä–∞–≤–∏–ª—å–Ω–æ!!! –£ –≤–∞—Å —Ö–æ—Ä–æ—à–æ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ')
            
        elif translated.text != hard_from_ru_to_en_word:
            print('–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ. –í —Å–ª–µ–¥—É—é—à–∏–π —Ä–∞–∑ —Ç–æ—á–Ω–æ –ø–æ–ª—É—á–∏—Ç—Å—è!')     
        learn_more3 = input('–ë—É–¥–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å , –∏–ª–∏ –Ω–µ—Ç?(–ï—Å–ª–∏ –¥–∞ —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ !–¥–∞! , –µ—Å–ª–∏ –Ω–µ—Ç —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ !–Ω–µ—Ç!)')
        if learn_more3 == '–¥–∞':
            level_selection = input('–í—ã–±–µ—Ä–µ—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç—å –µ—Å–ª–∏ –ª–µ–≥–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –Ω–∞–ø–∏—à–∏—Ç–µ "–ª–µ–≥–∫–∏–π" , –µ—Å–ª–∏ —Å—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å –Ω–∞–ø–∏—à–∏—Ç–µ "—Å—Ä–µ–¥–Ω–∏–π" –∏ –µ—Å–ª–∏ —Å–ª–æ–∂–Ω—ã–π –Ω–∞–ø–∏—à–∏—Ç–µ "—Å–ª–æ–∂–Ω—ã–π":')
            
        elif learn_more3 == '–Ω–µ—Ç':
            print('–ù–∞ —Å–µ–≥–æ–¥–Ω—è –≤—Å—ë!')
            break
        else:
            print('–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥!!!')
            break
    else:
        print('–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥!!!')
        break