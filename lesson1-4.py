import telebot
import random
from config import token    
from logic import gen_pass
smiles = ['üòé','üòÄ','üëç']
money = ['–û—Ä–µ–ª', '–†–µ—à–∫–∞']
rock_scissors_paper = ['–Ω–æ–∂–Ω–∏—Ü—ã','–±—É–º–∞–≥–∞','–∫–∞–º–µ–Ω—å']
# –ó–∞–º–µ–Ω–∏ 'TOKEN' –Ω–∞ —Ç–æ–∫–µ–Ω —Ç–≤–æ–µ–≥–æ –±–æ—Ç–∞
# –≠—Ç–æ—Ç —Ç–æ–∫–µ–Ω —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å –æ—Ç BotFather, —á—Ç–æ–±—ã –±–æ—Ç –º–æ–≥ —Ä–∞–±–æ—Ç–∞—Ç—å
bot = telebot.TeleBot(token)
    
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! <b>–Ø —Ç–≤–æ–π Telegram –±–æ—Ç.</b>\n<blockquote><u>–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:</u> \n/hello - <i>–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ</i> \n/bye - <i>–ø—Ä–æ—â–∞–Ω–∏–µ</i> \n/pass - <i>–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω—ã–π –ø–∞—Ä–æ–ª—å</i> \n/random_smile - <i>–≤—ã–≤–æ–¥–∏—Ç —Ä–∞–Ω–¥–æ–º–Ω—ã–π —Å–º–∞–π–ª–∏–∫</i> \n/heads_or_tails - <i>–û—Ä–µ–ª –∏–ª–∏ —Ä–µ—à–∫–∞?</i> \n/help - <i>–ø–æ–º–æ–∂–µ—Ç –≤–∞–º</i> \n/info - <i>—Ä–∞—Å—Å–∫–∞–∂–µ—Ç –æ –±–æ—Ç–µ</i> \n/rock_scissors_paper_game - <i>–∫–∞–º–µ–Ω—å - –Ω–æ–∂–Ω–∏—Ü—ã - –±—É–º–∞–≥–∞</i></blockquote>", parse_mode='HTML')
@bot.message_handler(commands=['hello'])
def send_hello(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç")

@bot.message_handler(commands=['bye'])
def send_bye(message):
    bot.reply_to(message, "–ü–æ–∫–∞, —É–¥–∞—á–∏!")
    
@bot.message_handler(commands=['pass'])
def send_pass(message):
    password = gen_pass(10)
    bot.reply_to(message, f"–í–∞—à –ø–∞—Ä–æ–ª—å: {password}")

@bot.message_handler(commands=['help'])
def send_bye(message):
    bot.reply_to(message, "–≠—Ç–æ—Ç –±–æ—Ç –æ—Ç–≤–µ—á—è–µ—Ç –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã! \n<blockquote>–≠—Ç–∏ –∑–∞–ø—Ä–æ—Å—ã –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–∞–∂–∞–≤ /start</blockquote>", parse_mode='HTML')

@bot.message_handler(commands=['info'])
def send_bye(message):
    bot.reply_to(message, "–≠—Ç–æ –º–æ–π –ø–µ—Ä–≤—ã–π –±–æ—Ç. \n<blockquote><u>–ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç?</u> \n–≠—Ç–æ—Ç –±–æ—Ç —É–º–µ–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø—Ä–æ—Å—ã. –≠—Ç–∏ –∑–∞–ø—Ä–æ—Å—ã –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–∞–∂–∞–≤ /start</blockquote>", parse_mode='HTML')

@bot.message_handler(commands=['random_smile'])
def send_rs(message):
    x = random.choice(smiles)
    bot.reply_to(message,x)

@bot.message_handler(commands=['heads_or_tails'])
def send_hot(message):
    y = random.choice(money)
    bot.reply_to(message,y)

@bot.message_handler(commands=['rock_scissors_paper_game'])
def send_rsp(message):
    bot.reply_to(message, "–ö–∞-–º–µ–Ω—å \n–ù–æ–∂-–Ω–∏-—Ü—ã \n–ë—É-–º–∞-–≥–∞ \n–†–∞–∑ \n–î–≤–∞ \n–¢—Ä–∏ \n<u>–í—ã–±–µ—Ä–µ—Ç–µ:</u> \n/rock - <i>–ö–∞–º–µ–Ω—å</i> \n/scissors - <i>–ù–æ–∂–Ω–∏—Ü—ã</i> \n/paper - <i>–ë—É–º–∞–≥–∞</i>",parse_mode='HTML')
    while True:

        #   Paper
        @bot.message_handler(commands=['paper'])
        def send_onepaper(message):
            z = random.choice(rock_scissors_paper)
            if z == '–Ω–æ–∂–Ω–∏—Ü—ã':
                bot.reply_to(message,f'–ë–æ—Ç –≤—ã–±—Ä–∞–ª: {z}')
                bot.reply_to(message,'–°–æ—Ä—è–Ω, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. –ë–æ—Ç –≤—ã–∏–≥—Ä–∞–ª!')

            elif  z == '–∫–∞–º–µ–Ω—å':
                bot.reply_to(message,f'–ë–æ—Ç –≤—ã–±—Ä–∞–ª: {z}')
                bot.reply_to(message,'–£—Ä–∞!!! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!')

            else:
                bot.reply_to(message,f'–ë–æ—Ç –≤—ã–±—Ä–∞–ª: {z}')
                bot.reply_to(message,'–ù–∏—á—å—è')

        #   Scisssors
        @bot.message_handler(commands=['scissors'])
        def send_onepaper(message):
            z = random.choice(rock_scissors_paper)
            if z == '–∫–∞–º–µ–Ω—å': 
                bot.reply_to(message,f'–ë–æ—Ç –≤—ã–±—Ä–∞–ª: {z}')        
                bot.reply_to(message,'–£–ø—Å. –ë–æ—Ç –≤—ã–∏–≥—Ä–∞–ª ((')

            elif z == '–±—É–º–∞–≥–∞':
                bot.reply_to(message,f'–ë–æ—Ç –≤—ã–±—Ä–∞–ª: {z}')
                bot.reply_to(message,'–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏, —Å—É–ø–µ—Ä!')

            else:
                bot.reply_to(message,f'–ë–æ—Ç –≤—ã–±—Ä–∞–ª: {z}')
                bot.reply_to(message,'–ù–∏—á—å—è...')

            
        #   Rock
        @bot.message_handler(commands=['rock'])
        def send_onepaper(message):
            z = random.choice(rock_scissors_paper)
            if z == '–±—É–º–∞–≥–∞':
                bot.reply_to(message,f'–ë–æ—Ç –≤—ã–±—Ä–∞–ª: {z}')
                bot.reply_to(message,'–ù—É, –≤–æ—Ç... –ë–æ—Ç –≤—ã–∏–≥—Ä–∞–ª...')

            elif z == '–Ω–æ–∂–Ω–∏—Ü—ã':
                bot.reply_to(message,f'–ë–æ—Ç –≤—ã–±—Ä–∞–ª: {z}')
                bot.reply_to(message,'–û—Ç–ª–∏—á–Ω–æ! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!')
        
            else:
                bot.reply_to(message,f'–ë–æ—Ç –≤—ã–±—Ä–∞–ª: {z}')
                bot.reply_to(message,'–≠—Ö... –ù–∏—á—å—è!')
#
        
bot.polling()
